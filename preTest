#! /bin/sh -ex

#  preTest
#  GEObfuscationSample
#
#  Created by Grigory Entin on 02.03.2018.
#  Copyright Â© 2018 Grigory Entin. All rights reserved.

pushd "${TARGET_TEMP_DIR:?}"

#
# Sanity
#
if ! csrutil status | grep -q 'Debugging Restrictions: disabled'
then
	set +x
	cat <<-'END'
		*** ABORTING DUE TO LACK OF PERMISSIONS ***
		Please reboot into recovery mode (Cmd-R) and do
		    csrutil enable --without debug
		Otherwise stringdups(1) won't be able to dump the content.
	END
	set -x
	exit 1
fi

#
# Brew brew and shell2http
#
mkdir homebrew && curl -L https://github.com/Homebrew/brew/tarball/master | tar xz --strip 1 -C homebrew
export PATH="${PATH:?}:${PWD:?}/homebrew/bin"
brew tap msoap/tools
brew install shell2http

#
# Run -unwind.sh from previous build (as a workaround for no way to unwind if the build was stopped), assuming that it's safe enough to do no harm in case of second invocation.
#
. preTest-unwind.sh

#
# Run shell2http and generate preTest-unwind.sh for postTest action.
#
# The body of the script below is used for matching vs `ps -o command` (see preTest-unwind.sh below). As long as it is the case, it *must* be a *single* command.
cat > shell2http.sh <<-'END'
	shell2http \
		-port=8193 \
		-form \
		/grep-stringdups-1 'stringdups -minimumCount=1 "${v_process_or_pid:?}" | grep "${v_grep_arg:?}" || true' \
	&
END

. shell2http.sh
pid=$!
sleep 1
ps -p $pid > /dev/null ## Couldn't find a better way to check whether it's still running
echo $pid > shell2http.pid
cat > preTest-unwind.sh <<-'END'
	# Below is a magic filter (read: quick hack) that should produce value matching `ps -o command` for the running shell2http as defined by shell2http.sh.
	expectedPSCommand="$(cat shell2http.sh | sed 's/\\//' | tr -d '\n' | tr -d \' | sed 's/ *&//')"
	pid=$(cat shell2http.pid)
	if [ "$(ps -p ${pid:?} -o command | tail -1)" == "${expectedPSCommand:?}" ]
	then
		kill ${pid:?}
		rm shell2http.pid
	fi
END
